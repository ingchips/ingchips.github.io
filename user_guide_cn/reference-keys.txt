fig:fig-welcome
fig:ch0-concept
tab:ch0-abbreviations
tab:ch0-terminology
fig:ch1-welcome
fig:ch1-wiz-series
fig:proj-type
fig:ch1-role
fig:ch1-peripheral
fig:ch1-hello-adv
fig:ch1-wiz-security
fig:ch1-hello-fota
fig:ch1-hello-common
fig:ch1-hello-proj-ready
fig:ch1-hello-downloader
fig:ch1-hello-ingota
tab:ch1-ibeacon
fig:ch1-edit-beacon-adv
fig:ch1-edit-beacon-content
fig:ch1-ibeacon-proj
fig:ch1-locate-page1-small
fig:ch1-locate-page2-small
fig:ch1-thermo-adv
fig:ch1-thermo-edit-ch
fig:ch1-ingtemp
fig:ch1-ota-version
tab:ch1-ota-package
fig:ch1-fota-update
fig:ch1-proj-iscanner
fig:ch1-iscanner
fig:ch1-tpt
fig:ch1-tpt-app
fig:ch1-cmd
fig:ch1-board-tpt
fig:ch1-smart-meter
fig:ch1-smart-meter-gatt
fig:ch1-copy-example
fig:ch2-downloader-uart-cfg
fig:ch2-downloader-options
fig:ch2-tracer-main
fig:ch2-tracer-msc
tab:ch3-printf-trace-compare
tab:ch3-port-compare
tab:ch-api-compare-timers
tab:ch-api-reg-bits
欢迎
intro
范围
架构
rtos-软件包
使用-c-语言开发-app
其它语言
noos-软件包
缩略语和术语
参考资料
tutorial
ch1-hello-world
development-tool-页面
choose-chip-series-页面
choose-project-type-页面
role-of-your-device-页面
peripheral-setup-页面
security-privacy-页面
firmare-over-the-air-页面
common-functions-页面
编译您的项目
下载
ibeacon
建立广播数据
尝试应用
温度计
建立广播数据-1
建立gatt配置文件
代码编写
通知
fota温度计
fota设备
创建一个新版本
fota服务器
尝试应用-1
ibeacon扫描设备
估算距离
并发广播扫描
通知指示
inter-task-comm
定时器
吞吐量
理论峰值吞吐量
测试吞吐量
对-ingdemo-进行测试
对我们的app进行测试
双角色-ble网关
用-wizard-创建一个外设app
定义温度计数据
扫描温度计
发现服务
数据处理
鲁棒性
准备温度计
测试
从示例开始
core-tools
向导
ch2-downloader
介绍
script-mass-prod
flash-读保护适用于-ing918xx
python-版本
ingtracer
ch2-axf-tool
dive-into-sdk
内存管理
全局分配
使用栈
使用堆
多任务
中断管理
功耗管理
cmsis-api
debugging-tracing
有关-segger-rtt-的使用提示
内存转储
api-ref
配置与信息
platform_config
原型
参数
返回值
备注
示例
platform_get_version
函数原型
参数-1
返回值-1
备注-1
示例-1
platform_read_info
函数原型-1
参数-2
返回值-2
备注-2
示例-2
api-switch-app
函数原型-2
参数-3
返回值-3
备注-3
示例-3
事件与中断
platform_set_evt_callback_table
函数原型-3
参数-4
返回值-4
备注-4
示例-4
platform_set_irq_callback_table
函数原型-4
参数-5
返回值-5
备注-5
示例-5
platform_set_evt_callback
函数原型-5
参数-6
返回值-6
备注-6
示例-6
platform_set_irq_callback
函数原型-6
参数-7
返回值-7
备注-7
示例-7
platform_enable_irq
函数原型-7
参数-8
返回值-8
备注-8
示例-8
时钟
platform_calibrate_rt_clk
函数原型-8
platform_rt_rc_auto_tune
函数原型-9
参数-9
返回值-9
备注-9
示例-9
platform_rt_rc_auto_tune2
函数原型-10
参数-10
返回值-10
platform_rt_rc_tune
函数原型-11
参数-11
返回值-11
备注-10
示例-10
rf
platform_set_rf_clk_source
platform_set_rf_init_data
platform_set_rf_power_mapping
函数原型-12
参数-12
返回值-12
备注-11
示例-11
platform_patch_rf_init_data
内存与实时操作系统rtos
platform_call_on_stack
函数原型-13
参数-13
返回值-13
备注-12
platform_get_current_task
函数原型-14
参数-14
返回值-14
备注-13
platform_get_gen_os_driver
函数原型-15
参数-15
返回值-15
备注-14
platform_get_heap_status
函数原型-16
参数-16
返回值-16
备注-15
示例-12
platform_get_task_handle
函数原型-17
参数-17
返回值-17
platform_install_task_stack
函数原型-18
参数-18
返回值-18
备注-16
platform_install_isr_stack
函数原型-19
参数-19
返回值-19
备注-17
示例-13
时间与定时器
platform_cancel_us_timer
函数原型-20
参数-20
返回值-20
函数原型-21
参数-21
返回值-21
备注-18
函数原型-22
参数-22
返回值-22
备注-19
platform_get_timer_counter
函数原型-23
参数-23
返回值-23
函数原型-24
参数-24
返回值-24
备注-20
示例-14
platform_set_abs_timer
函数原型-25
参数-25
返回值-25
备注-21
示例-15
platform_set_timer
函数原型-26
参数-26
返回值-26
备注-22
实用工具
platform_hrng
函数原型-27
参数-27
返回值-27
备注-23
示例-16
platform_rand
函数原型-28
参数-28
返回值-28
备注-24
示例-17
platform_read_persistent_reg
函数原型-29
参数-29
返回值-29
备注-25
示例-18
platform_reset
函数原型-30
参数-30
返回值-30
备注-26
示例-19
platform_shutdown
函数原型-31
参数-31
返回值-31
备注-27
示例-20
platform_write_persistent_reg
函数原型-32
参数-32
返回值-32
备注-28
示例-21
调试与追踪
platform_printf
原型-1
参数-33
返回值-33
备注-29
示例-22
platform_raise_assertion
函数原型-33
参数-34
返回值-34
备注-30
示例-23
platform_trace_raw
函数原型-34
参数-35
其他
platform_get_link_layer_interf
函数原型-35
参数-36
返回值-35
备注-31
syssetpublicdeviceaddr
函数原型-36
参数-37
返回值-36
备注-32
示例-24
revision-history
